<?xml version='1.0' encoding='utf-8'?>
<!DOCTYPE rfc [
  <!ENTITY nbsp    "&#160;">
  <!ENTITY zwsp   "&#8203;">
  <!ENTITY nbhy   "&#8209;">
  <!ENTITY wj     "&#8288;">
]>
<rfc xmlns:xi="http://www.w3.org/2001/XInclude" category="std" docName="draft-ietf-stir-rfc4916-update-06" ipr="trust200902" obsoletes="" updates="" submissionType="IETF" xml:lang="en" tocInclude="true" tocDepth="4" symRefs="true" sortRefs="true" version="3">
  <!-- xml2rfc v2v3 conversion 3.22.0 -->
  <!-- category values: std, bcp, info, exp, and historic
    ipr values: trust200902, noModificationTrust200902, noDerivativesTrust200902,
       or pre5378Trust200902
    you can add the attributes updates="NNNN" and obsoletes="NNNN" 
    they will automatically be output with "(if approved)" -->

  <!-- ***** FRONT MATTER ***** -->

  <front>
    <!-- The abbreviated title is used in the page header - it is only necessary if the 
         full title is longer than 39 characters -->

    <title abbrev="RFC4916 Update">Connected Identity for STIR</title>
    <seriesInfo name="Internet-Draft" value="draft-ietf-stir-rfc4916-update-06"/>
    <author initials="J." surname="Peterson" fullname="Jon Peterson">
      <organization abbrev="TransUnion">TransUnion</organization>
      <address>
        <email>jon.peterson@transunion.com</email>
      </address>
    </author>
    <author fullname="Chris Wendt" initials="C." surname="Wendt">
      <organization>Somos</organization>
      <address>
        <email>chris-ietf@chriswendt.net</email>
      </address>
    </author>
    <date year="2024"/>
    <!--    <area>
    ART
    </area>-->

    <keyword>SIP</keyword>
    <abstract>
      <t>The SIP Identity header field conveys cryptographic identity information about the originators of SIP requests. The Secure Telephone Identity Revisited (STIR) framework however
	  provides no means for determining the identity of the called party in a traditional telephone calling scenario. This document updates prior guidance on the "connected identity" problem
	  to reflect the changes to SIP Identity that accompanied STIR, and considers a revised problem space for connected identity as a means of detecting calls that have been retargeted to a party impersonating the intended destination, as well as the spoofing of mid-dialog or dialog-terminating events by intermediaries or third parties.
      </t>
    </abstract>
  </front>
  <middle>
    <section numbered="true" toc="default">
      <name>Introduction</name>
      <t>
   The <xref target="RFC3261" format="default">Session Initiation Protocol (SIP)</xref> initiates
   sessions, and as a step in establishing sessions, it exchanges information about the
   parties at both ends. Called users review information about the calling party, for example,
   to determine whether to accept communications initiated by SIP, in the same way that users of
   the telephone network assess "Caller ID" information before picking up calls. This information may sometimes
   be consumed by automated systems to make authorization decisions.   <xref target="RFC8224" format="default">STIR</xref> provides a cryptographic assurance of the identity of calling parties in order to prevent impersonation,
   which is a key enabler of unwanted robocalls, swatting, vishing, voicemail hacking, and similar attacks (see <xref target="RFC7340" format="default"/>).
      </t>
      <t>
   There also exists a related problem: the identity of the party who answers a call can differ from that of
   the initial called party for various innocuous reasons such as call forwarding, but in certain network environments, it is possible for attackers to hijack the route of a called number and direct it to a resource controlled by the attacker. It can potentially be difficult to determine why a call reached a
   target other than the one originally intended, and whether the party ultimately reached by the call is one that
   the caller should trust. The lack of mutual authentication of parties moreover makes it possible for outside attackers to inject forged messages (e.g., BYE) into a SIP session.
      </t>
      <t>
        The property of providing identity of the called party to the calling party is called "connected identity." Previous work on connected identity focused on fixing the core semantics of SIP. <xref target="RFC4916" format="default"/> allowed a mid-dialog request, such as an <xref target="RFC3311" format="default">UPDATE</xref>,
   to convey identity in either direction within the
   context of an existing INVITE-initiated dialog. 
   In an update to the original <xref target="RFC3261" format="default"/> behavior, 
   <xref target="RFC4916" format="default"/> allowed that UPDATE to alter the From header field value for
   requests in the backwards direction: previously <xref target="RFC3261" format="default"/> required that the From header field values sent in 
   requests in the backwards direction reflect the
   To header field value of the dialog-forming request. Under the original <xref target="RFC3261" format="default"/>
   rules, if Alice sent a dialog-forming request to Bob, then even if Bob's SIP service forwarded that dialog-forming request to Carol, Carol would still be required to put Bob's identity in the From header field value in any mid-dialog requests
   in the backwards direction.
      </t>
      <t>
   One of the original motivating use cases for <xref target="RFC4916" format="default"/> was the use of connected identity with the SIP <xref target="RFC4474" format="default">Identity</xref> header field. While a mid-dialog request in the backwards direction (e.g., UPDATE) can be signed with Identity like
   any other SIP request, forwarded requests would not be properly signed without the ability to change the mid-dialog From header field value: Carol, say, would not be able to furnish a key to sign for Bob's identity, if Carol wanted to sign requests in the backwards direction. Carol would however be able to sign for her own identity in the From header field value, if mid-dialog requests in the backwards direction were permitted to vary from the original To header field value.
      </t>
      <t>
	With the obsolescence of <xref target="RFC4474" format="default"/> by <xref target="RFC8224" format="default"/>, this specification supersedes the guidance of <xref target="RFC4916" format="default"/> to reflect the changes to the SIP Identity header field and the revised problem space of STIR. It also explores some new features that would be enabled by connected identity for STIR, including the use of connected identity to prevent route hijacking and to notify callers when an expected called party has successfully been reached. This document also addresses concerns about applying <xref target="RFC4916" format="default"/> connected identity to STIR discussed in the SIPBRANDY framework <xref target="RFC8862" format="default"/>.
      </t>
      <t>
	One area of connected identity that is not explored in this document is the implications for conferencing, especially meshed conferencing systems. This scope of this mechanism is solely two-party communications; multiparty sharing of connected identity is left for future work.
      </t>
    </section>
    <section numbered="true" toc="default">
      <name>Terminology</name>
      <t>The key words "MUST", "MUST NOT", "REQUIRED", "SHALL", "SHALL NOT", "SHOULD", "SHOULD NOT", "RECOMMENDED", "NOT RECOMMENDED", "MAY", and "OPTIONAL" in this document 
are to be interpreted as described in BCP 14 <xref target="RFC2119" format="default"/> <xref target="RFC8174" format="default"/> when, and only when, they appear in all capitals, as shown here.</t>
    </section>
    <section anchor="problem" numbered="true" toc="default">
      <name>Connected Identity Problem Statement for STIR</name>
      <t>
	  The <xref target="RFC7340" format="default">STIR problem statement</xref> enumerates robocalling, voicemail hacking, vishing, and swatting as problems with the modern telephone network that are enabled, or abetted, by impersonation: by the ability of a calling party to arbitrarily set the telephone number that will be rendered to end users to identify the caller. 
      </t>
      <t>
	  Today, sophisticated adversaries can redirect calls on the Public Switched Telephone Network (PSTN) to destinations other than the intended called party. For some call centers, like those associated with financial institutions, healthcare, and emergency services, an attacker could hope to gain valuable information about people or to prevent some classes of important services.
	  Moreover, on the Internet, the lack of any centralized or even federated routing system for telephone numbers has resulted in deployments where the routing of calls is arbitrary: calls to
	  telephone numbers might be dumped on a PSTN gateway, they might be sent to a default intermediary that makes forwarding decisions based on a local configuration file, various mechanisms
	  like private ENUM <xref target="RFC6116" format="default"/> might be consulted, or routing might be determined in some other, domain-specific way. In short, there are numerous attack surfaces that an adversary could explore to attempt to redirect calls for a particular number to someplace
	  other than the intended destination.
      </t>
      <t>
	  Another motivating use case for connected identity is mid-dialog requests, including BYE. The potential for an intermediary to generate a forged BYE in the backwards direction has always been built in to the stateful dialog management of SIP. For example, there is a class of mobile fraud attacks ("call stretching") that rely on intermediary networks making it appear as if a call has terminated to one side, while maintaining that the call is still active to the other, in order to create a billing discrepancy that could be pocketed by the intermediary. If BYE requests in both directions of a SIP dialog could be authenticated with STIR, just like dialog-forming requests, then another impersonation vector leading to fraud in the telephone network could be shut down.
      </t>
      <t>
	  Finally, telephone numbers are widely used today for two-factor authentication (TFA) prior to accessing web resources, which typically rely on sharing some sort of one-time password or similar unique link to validate control of a telephone number. These systems are often capable of using either telephone calls or messages for TFA. Connected identity is very valuable for these use cases because it gives a strong assurance to the calling party that they have in fact reached the user for the called telephone number.
      </t>
      <t>
    There are however practical limits to what securing the signaling can achieve.
	<xref target="RFC4916" format="default"/> rightly observed that once a SIP call has
    been answered, the called party can be replaced by a different party (with a
    different identity) due to call transfer, call park and
    retrieval, and so on. In some cases, due to the presence of a back-to-back user agent,
    it can be effectively impossible for the calling party to know that this has happened.
    The problem statement considered for STIR focuses solely on signaling, not whether media
    from the connected party should be rendered to the caller when a dialog has been established. This specification
    does not consider further any threats that arise from a substitution of media, though <xref target="RFC8862" format="default"/> contains related guidance.
      </t>
    </section>
    <section anchor="sunny" numbered="true" toc="default">
      <name>Connected Identity without Diversion</name>
      <t>
	In straightforward call setup, the address-of-record of the party reached by an INVITE corresponds to the "dest" field of the PASSporT in the INVITE's Identity header field value. The calling party will, however, have no secure assurance that they have reached the proper party if an Identity header field cannot be sent to them in the backwards direction. Provided that the terminating side of the dialog is STIR-capable, they should have the capacity to sign a PASSporT for the address-of-record of the called party.
      </t>
      <t>
	This specification therefore adds provisional and final responses, including the 100, 180, 183, and 200 responses, to the set of messages that can contain an Identity header field. PASSporTs that appear in SIP responses SHOULD use a "ppt" of "rsp", which is defined in <xref target="rsp" format="default"/> (although "div" MAY additionally appear in responses, per <xref target="div" format="default"/>). At a high level, an "rsp" PASSporT is signed similarly to the <xref target="RFC8946" format="default">"div"</xref> PASSporT, in so far as the certificate that signs a "rsp" PASSporT is signing the "dest" field, rather than the "orig" field.
	If the terminating side does not possess an appropriate credential to sign for the value of the "dest" element value in the PASSporT, it MUST NOT sign and send a "rsp" PASSporT in the backwards direction. PASSporTs of the "rsp" type will be referred to throughout this specification as "rsp" PASSporTs.
      </t>
      <t>
	While it might seem attractive to provide identity for failure response codes (4XX, 5XX, 6XX), those explicitly do not form dialogs or connections, and are thus outside the scope of this specification. The same applies to redirect (3XX) response codes, though see <xref target="RFC8946" format="default"/> Section 7 for guidance on authentication redirection.
      </t>
      <t>
	It is worth noting as well that at the time <xref target="RFC4916" format="default"/> was written, the Identity mechanism was far stricter about what counted as retargeting than <xref target="RFC8224" format="default"/>, which has canonicalization processes that eliminate minor changes to the URIs, especially when telephone numbers are the identifiers used by the caller and callee. For basic use cases, a PASSporT in a 183 or 200 OK should be sufficient to secure media keys for the purposes of SIPBRANDY <xref target="RFC8862" format="default"/>.
      </t>
      <t>
	The handling of an "rsp" PASSporT differs from the handling of a PASSporT received in a SIP request. Most importantly, note that SIP responses cannot be rejected, unlike SIP requests -- there is no way for the recipient of a response to report errors to the sender. The only protocol action that the calling party could take upon receiving a response carrying a problem PASSporT is to issue a CANCEL (for provisional dialogs) or BYE request in order to tear down the dialog (see <xref target="authz" format="default"/>). Provisional responses moreover are not reliably delivered without using 100rel and PRACK, and provisional responses may be consumed (without forwarding) by intermediaries under a variety of conditions. In short, their delivery is not guaranteed. 
      </t>
    </section>
    <section anchor="div" numbered="true" toc="default">
      <name>Connected Identity with Diversion</name>
      <t>
        Use cases involving authorized retargeting motivate connected identity: when a call acquires a new target (in its Request-URI) during transit, then the destination will no longer correspond to the target, the "dest" specified by the PASSporT in the dialog-forming request. If a PASSporT in a response came signed by a different destination than the caller intended, why should the caller trust it?
      </t>
      <t>
	In STIR, the "div" PASSporT type <xref target="RFC8946" format="default"/> was created to securely record when a call was retargeted from one destination to another. Those "div" PASSporTs can be consumed on the terminating side by verification services to determine that a call has reached its eventual destination for the right reasons.

	As <xref target="RFC8946" format="default"/> explains the situation, the only way those diversion PASSporTs will be seen by the calling party is if redirection is used (SIP 3XX responses) instead of retargeting; because some network policies aim to conceal service logic from the originating party, sending redirections in the backwards direction is the only current defined way for secure indications of redirection to be revealed to the calling party. That in turn would allow the calling user agent to have a strong assurance that legitimate entities in the call path caused the request to reach a party that the caller did not anticipate.
      </t>
      <t>
	This specification introduces another alternative. When sending a "rsp" PASSporT type in a SIP response, a User Agent Server (UAS) MAY also include (in Identity header field values) any "div" PASSporTs it received in the INVITE that initiated this dialog. Thus, PASSporTs of type "div" MAY also appear in SIP responses. These "div" PASSporTs can enable the originating side to receive a secure assurance that the call is being fielded by the proper recipient per the routing of the call. In this case, the "dest" signed in the "rsp" PASSporT MUST be the address-of-record of the party who was reached, rather than the "dest" of the PASSporT received in the dialog-initiating INVITE. 
      </t>
      <t>
	An "rsp" PASSporT that signs a different "dest" than the one that appeared in the PASSporT of the dialog-forming request MUST send at least one "div" PASSporT with it. If no "div" PASSporTs were received in a dialog-forming request with a different "dest" value than the original PASSporT claimed, then "rsp" PASSporTs MUST NOT be used in responses. "div" is not universally supported, so calls MAY be retargeted without generating a "div" PASSporT, in which case the use of "rsp" PASSporTs will not be possible. Note that the decision to trust any "div" or "rsp" PASSporT is, as always in STIR, a matter of local policy of the relying parties: some stricter systems may not want to trust any "rsp" that differs from the "dest" in the PASSporT of the original request.
      </t>
      <t>
	Note that sending "div" PASSporTs in the backwards direction will potentially reveal service logic to the called party. As presumably this service logic is enacted on behalf of the called party, the called party can make a policy determination about reflecting those "div" PASSporTs back to the caller: connected identity may not be compatible with some operator policies.
      </t>
      <t>
	This mechanism does not require altering the value of the From header field value in requests or responses in the backwards direction. While this was a major concern of <xref target="RFC4916" format="default"/>, in many operating environments, the From header field value does not even contain the identity of the caller that has been asserted by the network, which is instead conveyed by the <xref target="RFC3325" format="default">P-Asserted-Identity header field</xref>. The contents of PAID were never used for dialog matching, and so in environments where PAID is used, it can be altered more dynamically than the From (moreover, <xref target="RFC3261" format="default"/>, by introducing tag parameters to the To and From header field values, eliminated the need for stability in From values for dialog identification some time ago). For retargeting that utilizes the <xref target="RFC4916" format="default"/> "from-change" option tag, see <xref target="provis" format="default"/>. STIR is in general more flexible in constructing the "dest" than the Identity header field managed addresses-of-record at the time <xref target="RFC4916" format="default"/> was written. 
      </t>
    </section>
    <section anchor="mid" numbered="true" toc="default">
      <name>Connected Identity in Mid-Dialog and Dialog-Terminating Requests</name>
      <t>
	The use of the connected identity mechanism here specified is not limited to provisional dialog requests. Once a dialog has been established with connected identity, any re-INVITEs from either the originating and terminating side, as well as any BYE requests, SHOULD contain Identity header fields with valid PASSporTs. If only the terminating side supports connected identity, obviously the originator cannot be expected to know that it needs to send PASSporTs for subsequent requests like BYE. Doing so prevents third-parties from spoofing any mid-dialog requests in order to redirect media or similarly interfere with communications, as well as preventing denial of service teardowns by attackers, so it has clear benefits and is thus RECOMMENDED.
      </t>
      <t>
	Theoretically, any SIP requests in a dialog could be signed in this fashion, though it is unclear how valuable it would be for some (e.g., OPTIONS). Requests with specialized payloads such as INFO or MESSAGE, however, would require additional specification for how integrity protection for their bodies could be implemented. Some work has been done toward that for MESSAGE (see <xref target="RFC9475" format="default"/>. This specification thus does not recommend PASSporTs for any requests sent in a dialog other than INVITE, UPDATE, and BYE.
      </t>
      <t>
	It might seem tempting to require that, if an INVITE has been sent with an Identity header field containing a PASSporT, any CANCEL request received for the dialog initiated by that INVITE must also contain an Identity header field with a PASSporT. However, CANCEL requests can also be sent by stateful proxy servers engaged in parallel forking; for example, when branches need to be canceled because a final response has been received from a UAS. This specification does not forbid a User Agent Client (UAC) from sending a CANCEL for its own PASSporT-protected INVITE requests, as there may be limited use cases where it would be useful to relying parties, but recipients of a CANCEL should not expect PASSporTs to be present in connected identity cases.
      </t>
      <t>
        Mid-dialog requests also require special handling in diversion cases. Relying parties who intended to trust an "rsp" PASSporT MUST validate any "div" chain back to the "rsp" PASSporT on any Identity header field values received in responses. The dialog initiator can then treat the certificate that signed that "rsp" PASSporT as the appropriate certificate to sign any further mid-dialog or dialog-terminating requests received in the backwards direction. Furthermore, the "dest" element value in any requests or responses sent in the backwards direction during this dialog MUST be the same as the "dest" element value in the first response to the dialog-forming request that contains a PASSporT - unless the "from-change" extension is used, per <xref target="provis" format="default"/>.
      </t>
    </section>
    <section anchor="authz" numbered="true" toc="default">
      <name>Authorization Policy for Callers</name>
      <t>
	  In a traditional telephone call, the called party receives an alerting signal and can make a decision about whether or not to pick up a phone. They may have access to displayed information, like "Caller ID", to help them arrive at an authorization decision. The situation is more complicated for callers, however: callers typically expect to be connected to the proper destination and are often holding telephones in a position that would not enable them to see displayed information, if any were available for them to review -- and moreover, their most direct response to a security breach would be to hang up the call they were in the middle of placing.
      </t>
      <t>
	  While this specification does not prescribe any user experience associated with placing a call, it assumes that callers might have some way to a set an authorization posture that will result in the right thing happening when the connected identity is not expected. This is analogous to a situation where Secure Real-time Protocol (SRTP) negotiation fails because the keys exchanges at the media layer do not match fingerprints exchanged at the signaling layer: when a user requests confidentiality services, and they are unavailable, media should not be exchanged. Thus we assume that users have a way in their interface to require this criticality, on a per-call basis, or perhaps on a per-destination basis. Users will not always place calls where the connected identity is crucial, but when they do, they should have a way to tell their devices that the call should not be completed if it arrives at an unexpected or unauthenticated party.
      </t>
    </section>
    <section anchor="pre" numbered="true" toc="default">
      <name>Creating Pre-Association with Destinations</name>
      <t>
	  Any connected identity mechanism will work best if the user knows before initiating a call that connected identity is supported by the destination side. Not every institution that a user wants to connect to securely will support STIR and connected identity out of the gate. Some sort of directory service might exist advertising support for connected identity which institutions could use to inform potential callers that, if connected identity is supported when reaching them with SIP, there is a potential security problem. Similarly, user devices might keep some sort of log recording that a destination previously supported connected identity, so that if support is unavailable later, calling users could be alerted to a potential security problem.
      </t>
      <t>
	  The user interface of modern smartphones support an address book from which users select telephone numbers to dial. Even when dialing a number manually, the interface frequently checks
	  the address book, which will display to users any provisioned name for the target of the call if one exists. Similarly, when clicking on a telephone number viewed on a web page, or similar service, smartphones often prompt users approve the access to the outbound dialer. These sorts of decision points, when the user is still interacting with the user interface before a call is placed, provide an opportunity to probe what identity would be reached as a destination, and potentially even to exchange STIR PASSporTs in order to validate whether or not the expected destination can be reached securely. Again, this is probably most meaningful for contacting financial, government, or emergency services, for cases where reaching an unintended destination may have serious consequences.
      </t>
      <t>
	  The establishment of media-less dialogs has long been specified as a component of third-party call control in SIP <xref target="RFC3375" format="default"/>, in which an INVITE is sent with no SDP. Similar media-less dialogs have been proposed for certain automated systems per <xref target="RFC5552" format="default"/>. In the STIR context, a media-less dialog is established by sending an INVITE with an Identity header field but no SDP. STIR-aware UAS's that support this specification, upon receiving an INVITE with no SDP, carrying a PASSporT, with a 100rel in the Require header field value, SHOULD follow the mechanism described in <xref target="sunny" format="default"/> to send a provisional response carrying a PASSporT in the backwards direction. The PASSporT received in the backwards direction could be rendered to the originating user to help them decide if they want to place the call.
      </t>
    </section>
    <section anchor="rsp" numbered="true" toc="default">
      <name>The 'rsp' PASSporT Type</name>
      <t>
	  This specification defines a "rsp" PASSporT type that is sent only in SIP responses; it MUST NOT be sent in SIP requests.
      </t>
      <t>
	  The header of a "rsp" PASSporT shows a "ppt" of "rsp":
      </t>
      <sourcecode type="json"><![CDATA[
{ "typ":"passport",
  "ppt":"rsp",
  "alg":"ES256",
  "x5u":"https://www.example.com/cert.cer" }
		]]></sourcecode>
      <t>
	The payload of an "rsp" PASSporT looks entirely like a normal PASSporT - the only difference is in semantics, as the certificate signs for the "dest" header field rather than the "orig".</t>
      <sourcecode type="json"><![CDATA[
   { "orig":{"tn":"12155551212"},
     "dest":{"tn":["12155551214"]},
     "iat":1443208345 }
		]]></sourcecode>
      <t>
	No restrictions are placed here on additional elements appearing in the payload of an "rsp" type PASSporT.
      </t>
    </section>
    <section anchor="provis" numbered="true" toc="default">
      <name>UPDATE Procedures for Provisional Dialogs</name>
      <t>
		<xref target="RFC4916" format="default"/> identified a means of sending Identity header field values in the backwards direction before a final response to a dialog has been received by the UAC. It relied on negotiating support for "from-change" options tags on both sides, followed by the use of the UPDATE method to send the connected identity in the backwards direction. This can only happen after the UAS has received and responded to a <xref target="RFC3262" format="default">PRACK</xref> from the UAC, which would in turn have been triggered by a provisional 1xx response sent earlier by the UAC.
      </t>
      <t>
		However, the complexity of this mechanism makes it impractical to deploy for both the primary use case and the diversion use case described above. It may still have utility for corner cases with legacy versions of SIP (dating before To and From header field value tags) or more complex call parking scenarios. As such, this specification does not deprecate <xref target="RFC4916" format="default"/> "from-change" behavior, but nor does it provide an update for it for STIR -- that is left for future work. 
      </t>
    </section>
    <section anchor="IANA" numbered="true" toc="default">
      <name>IANA Considerations</name>
      <t>This specification defines a new PASSporT type for the PASSport Extensions Registry defined in <xref target="RFC8225" format="default"/>, which resides at https://www.iana.org/assignments/passport/passport.xhtml#passport-extensions:</t>
      <t>"rsp" as defined in [RFCThis] <xref target="rsp" format="default"/></t>
    </section>
    <section anchor="priv" numbered="true" toc="default">
      <name>Privacy Considerations</name>
      <t>
	  Note that sending connected identity can reveal information about the called party. If a called party does not wish to be identified, it is especially important not to share rich call data (RCD) in the backwards direction, particular in business-to-consumer calling cases. From a user experience perspective, this would likely work similarly to current systems for sharing numbers, names, and even pictures from calling parties to called parties -- users have considerable control over that experience, and similarly for connected identity this must be an opt-in choice for users. In general, RCD is more commonly used by enterprises than by individual users.
      </t>
    </section>
    <section anchor="Security" numbered="true" toc="default">
      <name>Security Considerations</name>
      <t>
	  The security considerations of <xref target="RFC8224" format="default"/> and <xref target="RFC8225" format="default"/> apply to the use of the "rsp" PASSporT. In general, a PASSporT of type "rsp" has similar security properties to a <xref target="RFC8946" format="default"/> diversion ("div") PASSporT. Relying parties leverage a "rsp" PASSporT to determine the recipient of a request, and as with "div," the "dest" element of an "rsp" PASSporT is signed, rather than the "orig" element.
      </t>
      <t>
	  The major threat that "rsp" addresses is the impersonation of a SIP response or mid-dialog/dialog-terminating request. For the latter, this might include forging a BYE for a denial-of-service attack, or for example forging a re-INVITE that negotiates media channels controlled by an attacker. For the former, some form of route hijacking or similar attack can be mounted by forging a dialog-forming response that appears to the caller to initiate a dialog with the intended destination. The "rsp" mechanism uses PASSporTs to provide a non-repudiable assurance of the signer of such responses and requests.
      </t>
      <t>
	  The value of a "rsp" PASSporT to relying parties, as with all PASSporTs, depends on the relying party trusting the certificate that signs the PASSporT, and having a reasonable assurance that the certificate in question is eligible to sign responses/requests for the number in the "dest" field of the "rsp" PASSporT. For STIR certificates that use Service Provider Codes (SPCs), effectively the relying party knows the network operator who is vouching for that "rsp." This in turn enables traceback and similar mitigations.
      </t>
      <t>
	  As was mentioned in <xref target="div" format="default"/>, the use of "div" along with "rsp" in responses may reveal the service logic of diversions to calling parties; however, since the called party ultimately invokes the "rsp" mechanism, any necessary policy controls can prevent the sending of "rsp" when that service logic must be protected.
      </t>
    </section>
  </middle>
  <!--  *****BACK MATTER ***** -->

  <back>
    <!-- References split into informative and normative -->

    <!-- There are 2 ways to insert reference entries from the citation libraries:
    1. define an ENTITY at the top, and use "ampersand character"RFC2629; here (as shown)
    2. simply use a PI "less than character"?rfc include="reference.RFC.2119.xml"?> here
       (for I-Ds: include="reference.I-D.narten-iana-considerations-rfc2434bis.xml")

    Both are cited textually in the same manner: by using xref elements.
    If you use the PI option, xml2rfc will, by default, try to find included files in the same
    If you use the PI option, xml2rfc will, by default, try to find included files in the same
    directory as the including file. You can also define the XML_LIBRARY environment variable
    with a value containing a set of directories to search.  These can be either in the local
    filing system or remote ones accessed by http (http://domain/dir/... ).-->

    <references>
      <name>References</name>
      <references>
        <name>Normative References</name>
        <xi:include href="https://bib.ietf.org/public/rfc/bibxml/reference.RFC.2119.xml"/>
        <xi:include href="https://bib.ietf.org/public/rfc/bibxml/reference.RFC.8174.xml"/>
        <xi:include href="https://bib.ietf.org/public/rfc/bibxml/reference.RFC.3261.xml"/>
        <xi:include href="https://bib.ietf.org/public/rfc/bibxml/reference.RFC.3262.xml"/>
        <xi:include href="https://bib.ietf.org/public/rfc/bibxml/reference.RFC.8224.xml"/>
        <xi:include href="https://bib.ietf.org/public/rfc/bibxml/reference.RFC.8225.xml"/>
        <xi:include href="https://bib.ietf.org/public/rfc/bibxml/reference.RFC.4916.xml"/>
        <xi:include href="https://bib.ietf.org/public/rfc/bibxml/reference.RFC.3311.xml"/>
        <xi:include href="https://bib.ietf.org/public/rfc/bibxml/reference.RFC.8946.xml"/>
        <xi:include href="https://bib.ietf.org/public/rfc/bibxml/reference.RFC.8862.xml"/>
        <xi:include href="https://bib.ietf.org/public/rfc/bibxml/reference.RFC.3375.xml"/>
      </references>
      <references>
        <name>Informative References</name>
        <xi:include href="https://bib.ietf.org/public/rfc/bibxml/reference.RFC.9475.xml"/>
        <xi:include href="https://bib.ietf.org/public/rfc/bibxml/reference.RFC.6116.xml"/>
        <xi:include href="https://bib.ietf.org/public/rfc/bibxml/reference.RFC.5552.xml"/>
        <xi:include href="https://bib.ietf.org/public/rfc/bibxml/reference.RFC.4474.xml"/>
        <xi:include href="https://bib.ietf.org/public/rfc/bibxml/reference.RFC.7340.xml"/>
        <xi:include href="https://bib.ietf.org/public/rfc/bibxml/reference.RFC.3325.xml"/>
      </references>
    </references>
        <section anchor="Acknowledgments" numbered="false" toc="default">
      <name>Acknowledgments</name>
      <t>We would like to thank Russ Housley, Jonathan Rosenberg, and Orie Steele for their contributions to this specification.</t>
    </section>
  </back>
</rfc>
